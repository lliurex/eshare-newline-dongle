<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="235"
   height="110"
   viewBox="0 0 62.177082 29.104167"
   version="1.1"
   id="svg900"
   inkscape:version="1.3 (1:1.3+202307231459+0e150ed6c4)"
   sodipodi:docname="zero-lliurex-eshare-newline-dongle_2.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview902"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:document-units="mm"
     showgrid="false"
     units="px"
     inkscape:zoom="2"
     inkscape:cx="156.75"
     inkscape:cy="142.5"
     inkscape:window-width="1920"
     inkscape:window-height="882"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g7"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1"
     showguides="true" />
  <defs
     id="defs897">
    <linearGradient
       id="linearGradient4689">
      <stop
         style="stop-color:#5a9fd4;stop-opacity:1;"
         offset="0"
         id="stop4691" />
      <stop
         style="stop-color:#306998;stop-opacity:1;"
         offset="1"
         id="stop4693" />
    </linearGradient>
    <linearGradient
       id="linearGradient4671">
      <stop
         style="stop-color:#ffd43b;stop-opacity:1;"
         offset="0"
         id="stop4673" />
      <stop
         style="stop-color:#ffe873;stop-opacity:1"
         offset="1"
         id="stop4675" />
    </linearGradient>
    <linearGradient
       id="a"
       gradientUnits="userSpaceOnUse"
       x1="48"
       x2="48"
       y1="88"
       y2="48">
      <stop
         offset="0"
         stop-color="#b6d1f2"
         id="stop1" />
      <stop
         offset="1"
         stop-color="#e9eef4"
         id="stop2" />
    </linearGradient>
    <filter
       inkscape:collect="always"
       style="color-interpolation-filters:sRGB"
       id="filter5128-7"
       x="-0.064703691"
       y="-0.064703691"
       width="1.1294074"
       height="1.1294074">
      <feGaussianBlur
         inkscape:collect="always"
         stdDeviation="0.11413512"
         id="feGaussianBlur5130-5" />
    </filter>
  </defs>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1">
    <rect
       style="fill:#000000;stroke:#525252;stroke-width:0.2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
       id="rect2"
       width="78.974594"
       height="47.09478"
       x="-7.7407813"
       y="-9.0266562" />
    <g
       id="g1055"
       transform="translate(-74.291451,-37.83603)">
      <g
         id="g4"
         transform="translate(-18.520839)" />
    </g>
    <script
       id="mesh_polyfill"
       type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
    <g
       id="g5"
       transform="matrix(1.1231907,0,0,1.1231907,6.0984785,-2.6397303)">
      <g
         id="g3"
         style="fill:#808080"
         transform="matrix(0.02461979,0,0,0.02461979,-1.38583,2.549501)">
        <path
           d="m 240.3032,47.872965 c 0.86064,-0.0029 1.72127,-0.0058 2.60799,-0.0087 1.41507,0.0029 1.41507,0.0029 2.85873,0.0058 1.0094,-0.0019 2.0188,-0.0038 3.05879,-0.0058 3.41652,-0.0052 6.833,-0.0032 10.24952,-0.0013 2.47109,-0.0023 4.94219,-0.0049 7.41328,-0.008 5.40729,-0.0057 10.81455,-0.0083 16.22184,-0.0082 8.095,1.51e-4 16.19,-0.0054 24.285,-0.01205 13.7945,-0.01116 27.589,-0.01748 41.3835,-0.02117 13.98565,-0.0038 27.9713,-0.0096 41.95695,-0.01808 0.88231,-5.31e-4 1.76461,-0.0011 2.67365,-0.0016 3.59331,-0.0022 7.18663,-0.0043 10.77994,-0.0065 43.58532,-0.02652 87.17065,-0.04207 130.75597,-0.05516 14.13126,-0.0042 28.26252,-0.0088 42.39378,-0.01358 74.0029,-0.02491 148.0058,-0.04697 222.0087,-0.05919 5.41808,-8.97e-4 10.83617,-0.0018 16.25426,-0.0027 1.07479,-1.82e-4 2.14958,-3.63e-4 3.25694,-5.5e-4 10.88936,-0.0018 21.77872,-0.0037 32.66808,-0.0056 2.18337,-3.78e-4 4.36674,-7.55e-4 6.55011,-0.0011 70.13537,-0.01203 140.27072,-0.04172 210.40607,-0.08342 50.3875,-0.02994 100.775,-0.05757 151.1625,-0.06728 1.0359,-2.01e-4 2.0718,-4.01e-4 3.139,-6.08e-4 22.7381,-0.0043 45.4761,-0.0073 68.2142,-0.0089 9.1485,-6.76e-4 18.297,-0.0015 27.4455,-0.0024 1.0012,-9.4e-5 2.0025,-1.88e-4 3.0341,-2.85e-4 32.2742,-0.0031 64.5484,-0.02164 96.8226,-0.04807 32.5009,-0.02653 65.0018,-0.0373 97.5028,-0.02626 4.4886,0.0015 8.9772,0.0029 13.4658,0.0041 1.3199,3.75e-4 1.3199,3.75e-4 2.6664,7.57e-4 13.9471,0.0035 27.894,-0.0098 41.8411,-0.03014 13.7058,-0.0196 27.4116,-0.02146 41.1174,-0.0043 8.0407,0.0095 16.081,0.0053 24.1217,-0.01902 5.9622,-0.01654 11.9241,-0.0071 17.8863,0.01257 2.4024,0.0039 4.8048,-7.02e-4 7.2072,-0.01459 3.2555,-0.0176 6.5096,-0.0045 9.7651,0.01638 0.9291,-0.01243 1.8581,-0.02485 2.8153,-0.03766 6.7524,0.09156 12.0975,1.839903 17.7067,5.659799 4.9185,5.23276 7.1236,9.448633 7.1288,16.698198 0,1.197295 0.01,2.39459 0.01,3.628167 0,1.338028 0,2.676056 0,4.014084 0,1.419992 0,2.839984 0.01,4.259975 0.01,3.928733 0.01,7.857446 0.01,11.786184 2e-4,4.264145 0.01,8.528284 0.011,12.792424 0.01,8.46939 0.013,16.93877 0.015,25.40816 0,10.13965 0.012,20.27929 0.021,30.41894 0.021,24.51011 0.031,49.02023 0.04,73.53035 0,11.58967 0.01,23.17934 0.015,34.76903 0.018,39.65479 0.033,79.30958 0.04,118.96438 5e-4,2.49034 9e-4,4.98068 0,7.47101 4e-4,1.85252 4e-4,1.85252 7e-4,3.74246 0,6.25742 0,12.51483 0,18.77226 2e-4,1.24181 5e-4,2.48363 7e-4,3.76307 0.01,40.27756 0.031,80.55508 0.064,120.83262 0.034,42.56086 0.054,85.1217 0.057,127.68258 5e-4,4.66949 9e-4,9.33899 0,14.00848 10e-5,1.1498 2e-4,2.29961 3e-4,3.48424 0,18.52706 0.018,37.05408 0.038,55.58113 0.02,18.61203 0.026,37.22402 0.016,55.83606 -0.01,11.0651 8e-4,22.13005 0.023,33.19512 0.013,7.3858 0.012,14.77147 -4e-4,22.15726 -0.01,4.21188 -0.01,8.42351 0.01,12.63537 0.015,3.83119 0.012,7.6619 -0.01,11.49307 0,2.02812 0.01,4.05626 0.026,6.08433 -0.067,8.71204 -0.9679,14.43297 -7.3385,20.80354 -6.9099,4.74212 -12.1206,5.62647 -20.3334,5.56355 -1.0136,0.004 -2.0273,0.008 -3.0716,0.0128 -3.4129,0.0105 -6.8253,-4.9e-4 -10.2382,-0.0113 -2.4755,0.003 -4.951,0.008 -7.4265,0.0132 -5.4077,0.009 -10.8152,0.009 -16.2228,9.5e-4 -8.0954,-0.0123 -16.1907,-0.007 -24.2862,10e-4 -13.7962,0.0138 -27.5924,0.0133 -41.3886,0.005 -13.9844,-0.008 -27.9688,-0.01 -41.9532,-0.004 -1.324,5.8e-4 -1.324,5.8e-4 -2.6748,10e-4 -3.595,0.002 -7.1899,0.003 -10.7849,0.005 -33.499,0.0159 -66.9981,0.0169 -100.4971,0.009 -0.9931,-2.5e-4 -1.9861,-5e-4 -3.0093,-7.5e-4 -0.9946,-2.5e-4 -1.9892,-5e-4 -3.014,-7.6e-4 -30.2793,-0.008 -60.5587,-0.01 -90.838,-0.006 -2.0262,2.3e-4 -4.0524,4.7e-4 -6.0786,7e-4 -8.142,9.3e-4 -16.2841,0.002 -24.4262,0.003 -22.7616,0.003 -45.5232,0.004 -68.2849,0.005 -1.0366,4e-5 -2.0732,9e-5 -3.1412,1.3e-4 -33.0391,10e-4 -66.0783,-0.002 -99.1175,-0.009 -1.0719,-2.2e-4 -2.1438,-4.3e-4 -3.2481,-6.4e-4 -17.4077,-0.003 -34.8154,-0.007 -52.223,-0.0108 -69.04451,-0.0146 -138.08899,-0.0139 -207.13349,6.9e-4 -17.39879,0.004 -34.79759,0.007 -52.19639,0.0107 -1.07125,2.1e-4 -2.1425,4.2e-4 -3.24621,6.4e-4 -33.00417,0.006 -66.00833,0.009 -99.01249,0.008 -1.03583,-4e-5 -2.07165,-8e-5 -3.13887,-1.2e-4 -22.73618,-9.4e-4 -45.47236,-0.003 -68.20855,-0.006 -8.13486,-9.9e-4 -16.26972,-0.002 -24.40459,-0.003 -2.02381,-2.3e-4 -4.04763,-4.7e-4 -6.07144,-7.1e-4 -30.27277,-0.004 -60.54552,-5.2e-4 -90.81829,0.007 -1.48956,3.7e-4 -1.48956,3.7e-4 -3.00921,7.5e-4 -0.99122,2.5e-4 -1.98244,5e-4 -3.00369,7.5e-4 -33.40071,0.008 -66.8014,0.005 -100.2021,-0.0106 -3.58369,-0.002 -7.16738,-0.003 -10.75107,-0.005 -0.87953,-3.9e-4 -1.75905,-7.8e-4 -2.66522,-10e-4 -13.94919,-0.006 -27.89836,-0.002 -41.84754,0.006 -13.70281,0.008 -27.40558,0.005 -41.10839,-0.009 -8.04207,-0.008 -16.08405,-0.008 -24.12612,0.004 -5.95791,0.008 -11.91568,8.1e-4 -17.87358,-0.0128 -2.40459,-0.003 -4.80919,-9.8e-4 -7.21376,0.007 -3.25101,0.01 -6.50145,7.8e-4 -9.75243,-0.0127 -0.93621,0.007 -1.87242,0.0144 -2.837,0.0217 -7.79262,-0.0662 -13.5018,-1.90454 -19.30895,-7.39779 -3.7175,-5.05992 -5.12436,-8.4656 -5.1288,-14.69819 -0.003,-1.1973 -0.006,-2.39459 -0.01,-3.62817 0.001,-1.33803 0.003,-2.67606 0.005,-4.01408 -0.002,-1.42 -0.004,-2.83999 -0.007,-4.25998 -0.006,-3.92873 -0.007,-7.85745 -0.006,-11.78618 -1.7e-4,-4.26415 -0.006,-8.52829 -0.0112,-12.79243 -0.009,-8.46938 -0.0132,-16.93877 -0.0155,-25.40816 -0.003,-10.13964 -0.0116,-20.27928 -0.0204,-30.41893 -0.0209,-24.51011 -0.0313,-49.02023 -0.0401,-73.53036 -0.004,-11.58967 -0.009,-23.17934 -0.0147,-34.76902 -0.0179,-39.65479 -0.0329,-79.30957 -0.0403,-118.96438 -4.8e-4,-2.49033 -9.5e-4,-4.98068 -0.001,-7.471 -2.4e-4,-1.23502 -4.8e-4,-2.47003 -7.2e-4,-3.74247 -10e-4,-6.25741 -0.002,-12.51483 -0.004,-18.77225 -2.4e-4,-1.24182 -4.8e-4,-2.48363 -7.3e-4,-3.76307 -0.008,-40.27757 -0.0313,-80.55509 -0.0638,-120.83263 -0.0343,-42.56086 -0.054,-85.1217 -0.0573,-127.68258 -4.2e-4,-4.66949 -9e-4,-9.33899 -0.001,-14.00848 -1.2e-4,-1.14981 -2.5e-4,-2.29961 -3.7e-4,-3.48425 -0.002,-18.52706 -0.018,-37.05408 -0.0385,-55.58112 -0.0202,-18.61203 -0.0257,-37.22402 -0.0162,-55.83606 0.005,-11.0651 -7.2e-4,-22.13005 -0.0225,-33.19513 -0.0135,-7.38578 -0.0125,-14.77147 4e-4,-22.15726 0.007,-4.211882 0.007,-8.423506 -0.01,-12.635369 -0.0154,-3.831185 -0.0123,-7.661897 0.005,-11.493067 0.005,-2.028125 -0.0104,-4.056265 -0.0262,-6.084333 0.0629,-8.230922 0.77967,-14.14582 6.74471,-20.268387 0.75281,-0.547852 1.50563,-1.095703 2.28125,-1.660156 0.75281,-0.565899 1.50563,-1.131797 2.28125,-1.714844 3.4444,-2.090321 6.53753,-2.470649 10.52173,-2.47278 z M 262.00002,92 c 0,256.07999 0,512.15999 0,776 460.68,0 921.35998,0 1395.99998,0 0,-256.08001 0,-512.16 0,-776 -460.68,0 -921.35998,0 -1395.99998,0 z"
           fill="#333639"
           id="path3"
           style="fill:#808080" />
        <path
           d="m 0,0 c 460.68,0 921.36,0 1396,0 0,256.08 0,512.16 0,776 C 935.32,776 474.64,776 0,776 0,519.92 0,263.84 0,0 Z m 22,23 c 0,240.9 0,481.8 0,730 446.16,0 892.32,0 1352,0 0,-240.9 0,-481.8 0,-730 -446.16,0 -892.32,0 -1352,0 z"
           fill="#dfdfdf"
           transform="translate(262,92)"
           id="path4"
           style="fill:#000000" />
        <path
           d="m 871.26278,59.337412 c 97.02,0 194.04002,0 294.00002,0 0.33,0.66 0.66,1.32 1,2 -68.8234,1.318971 -68.8234,1.318971 -101.7038,0.494723 -15.0954,-0.37765 -30.1752,-0.555999 -45.2752,-0.508455 -30.03781,0.08844 -60.07101,-0.163059 -90.10721,-0.44983 -6.57347,-0.06219 -13.14696,-0.121427 -19.72046,-0.180969 -12.73114,-0.115724 -25.46226,-0.234509 -38.19335,-0.355469 0,-0.33 0,-0.66 0,-1 z"
           fill="#121417"
           id="path5"
           style="fill:#808080" />
        <path
           d="m 0,0 c 4.6335573,0.15026509 9.2679463,0.2684415 13.902414,0.38671684 1.003208,0.0257501 2.006415,0.0515002 3.040023,0.0780306 13.154512,0.3217512 26.311567,0.42354072 39.469255,0.53183269 1.918232,0.0160485 1.918232,0.0160485 3.875217,0.0324211 7.840355,0.064848 15.680741,0.1248761 23.521145,0.1833992 6.101759,0.046202 12.203491,0.095531 18.305226,0.1448547 13.83512,0.1117552 27.67027,0.2189875 41.50544,0.3229188 0,0.33 0,0.66 0,1 -31.03201,0.022926 -62.064023,0.040568 -93.096044,0.051065 -3.682747,0.00125 -7.365494,0.00254 -11.04824,0.00387 -0.733016,2.623e-4 -1.466033,5.246e-4 -2.221261,7.949e-4 -11.792053,0.00432 -23.584101,0.012193 -35.376151,0.021426 -12.144402,0.00943 -24.288802,0.014922 -36.433208,0.016936 -6.802475,0.00124 -13.604941,0.00418 -20.407412,0.011642 -55.129004,0.057439 -55.129004,0.057439 -82.417684,-1.10573 0,-0.33 0,-0.66 0,-0.99998989 1.22093,0.002221 2.44185,0.004441 3.69977,0.006729 11.59009,0.0204032 23.18018,0.0353249 34.770284,0.0450831 5.956442,0.005186 11.91287,0.0122033 17.869304,0.0236273 5.764241,0.0109843 11.528467,0.0168698 17.292717,0.0194378 2.182849,0.001827 4.365696,0.005392 6.548539,0.0108528 10.399836,0.0249425 20.755242,-0.03103 31.139457,-0.6369836 C -17.344741,-0.35452428 -8.7229868,-0.28739851 0,0 Z"
           fill="#101316"
           transform="translate(1536.3813,909.31983)"
           id="path6"
           style="fill:#808080" />
        <g
           id="g2"
           transform="translate(22.922278,-4.9039098)">
          <rect
             style="fill:#0000ff;stroke:#525252;stroke-width:3.73683;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
             id="rect1-3"
             width="31.883585"
             height="10.964621"
             x="298.41873"
             y="885.39722" />
          <rect
             style="fill:#0000ff;stroke:#525252;stroke-width:3.73683;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
             id="rect1-6"
             width="31.883585"
             height="10.964621"
             x="345.17514"
             y="885.39722" />
          <rect
             style="fill:#0000ff;stroke:#525252;stroke-width:3.73683;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
             id="rect1-2"
             width="31.883585"
             height="10.964621"
             x="392.72327"
             y="885.39722" />
        </g>
        <circle
           style="fill:#008000;stroke:#525252;stroke-width:3.73683;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
           id="path2"
           cx="1618.1029"
           cy="885.97565"
           r="9.8870125" />
        <rect
           style="fill:#39b3ff;fill-opacity:1;stroke:#525252;stroke-width:5.00847;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:stroke fill markers"
           id="rect7"
           width="1351.7645"
           height="726.56451"
           x="285.42899"
           y="116.91762" />
      </g>
    </g>
    <g
       id="g10">
      <g
         id="g1"
         transform="matrix(1.1455059,0,0,1.1455059,-2.3447655,-3.8184863)">
        <g
           id="g11"
           transform="matrix(0.00470378,0,0,0.00470378,4.2202934,9.9906097)">
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 2062.446,1254.6504 c 1.4629,-2.2322 2.5264,-3.8778 4.1763,-6.4312 40.1831,21.4399 80.1604,42.7699 121.3262,64.734 -6.1958,12.1978 -11.9414,24.3627 -18.4285,36.1182 -18.3347,33.2246 -39.0129,64.8091 -63.8677,93.6906 -32.4787,37.7404 -70.5622,68.4652 -113.625,93.0619 -51.7136,29.5378 -107.2011,48.0106 -166.5238,54.1955 -19.4567,2.0286 -39.0326,3.372 -58.5844,3.8984 -19.5252,0.5257 -39.1577,0.5874 -58.6208,-0.8293 -41.8245,-3.0442 -82.7981,-10.7163 -122.6745,-24.2703 -52.3716,-17.8009 -99.1068,-45.0673 -139.9286,-82.1936 -26.4009,-24.0106 -49.089,-51.4143 -69.4491,-80.7442 -25.3467,-36.5136 -45.8777,-75.482 -60.6213,-117.459 -10.2514,-29.187 -17.6196,-59.0623 -21.9561,-89.7029 -3.7262,-26.3304 -5.9176,-52.8053 -5.2251,-79.3569 2.3137,-88.7146 24.6014,-171.69302 71.8676,-247.46567 23.5437,-37.74292 51.132,-72.12451 83.5665,-102.50695 25.8065,-24.17389 54.3043,-44.69513 85.4216,-61.69361 51.1609,-27.94757 106.0513,-43.72906 163.7151,-49.21063 28.0729,-2.6687 56.5734,-3.4234 84.7357,-2.06048 72.3115,3.49938 140.9352,21.44195 204.0321,57.90606 30.6363,17.70496 58.6068,38.96851 84.1311,63.59644 33.2149,32.04852 61.7859,67.56158 84.4204,107.85949 22.638,40.30329 38.2076,83.19251 47.7901,128.31595 5.2326,24.64 9.2036,49.4767 10.2095,74.7 0.7277,18.2533 1.3466,36.511 1.9956,54.7675 0.067,1.9001 0.01,3.8048 0.01,6.4816 -258.3448,0 -515.8736,0 -774.625,0 3.2625,21.2059 5.526,41.634 9.6547,61.6779 12.1315,58.8973 38.3099,110.6247 79.7238,154.6816 40.9804,43.5959 89.8591,73.38 148.344,86.3244 59.033,13.0658 117.5229,9.6973 175.1766,-8.4995 37.7214,-11.9054 72.7443,-29.0488 104.5508,-52.7486 24.8205,-18.4944 45.0682,-41.3343 62.74,-66.3767 16.0853,-22.7945 30.816,-46.5447 46.5435,-70.46 M 1938.1158,854.87292 c -16.5085,-11.21966 -33.7409,-21.0559 -51.9231,-29.42956 -52.4581,-24.15936 -107.5329,-33.55151 -164.8487,-29.16858 -42.8231,3.27472 -83.5512,14.77606 -121.3027,35.67133 -35.5946,19.70129 -66.6427,44.82312 -90.7662,77.91174 -24.0988,33.0553 -41.2019,69.61633 -53.853,108.37165 -0.3497,1.0715 -0.2936,2.2756 -0.4093,3.2671 198.6221,0 396.6568,0 595.2997,0 -19.2753,-67.78029 -52.0221,-125.55635 -112.1967,-166.62368 z"
             id="path2-6" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 5914.0176,671.8418 c 69.5952,18.38397 129.8286,51.98205 182.0263,100.30218 41.3902,38.31647 75.5699,82.04883 100.6748,132.64002 20.1929,40.69256 33.5845,83.61157 41.3135,128.3714 6.6245,38.365 9.4629,76.9446 8.0235,116.8158 -257.3389,0 -514.4517,0 -772.9087,0 1.1587,12.8332 1.5522,24.7107 3.4096,36.3547 5.4541,34.194 14.4019,67.3743 29.3047,98.8609 13.4693,28.459 30.5357,54.4511 51.8462,77.5229 23.6192,25.5719 50.2617,47.3389 81.2217,63.8114 31.5215,16.7714 64.9038,27.2521 100.1875,31.4608 50.5352,6.0279 100.3193,1.5944 148.6353,-14.4624 50.0854,-16.6449 96.2397,-40.6601 132.5244,-80.0169 15.6865,-17.0147 29.8178,-35.604 43.3676,-54.4064 12.4136,-17.2273 23.0899,-35.7068 34.5445,-53.6264 1.4248,-2.2294 2.9287,-4.409 4.7759,-7.1818 40.271,21.4792 80.3237,42.8421 121.4887,64.7982 -9.1172,17.1573 -17.5058,34.0489 -26.8828,50.3725 -23.2949,40.5502 -50.77,77.9706 -84.9927,110.1127 -27.5024,25.8309 -57.83,47.8497 -90.8901,66.0003 -39.2661,21.5582 -80.938,36.6706 -124.9297,45.2063 -29.0527,5.6369 -58.3496,9.3343 -87.9995,9.271 -20.8804,-0.045 -41.8232,0.4586 -62.6284,-0.9324 -77.5069,-5.1814 -150.2437,-25.9883 -215.7774,-68.7962 -45.7099,-29.8585 -82.6259,-68.7622 -114.1499,-113.0157 -26.1591,-36.7229 -47.4951,-76.0224 -62.8134,-118.4966 -11.3926,-31.589 -19.5411,-63.9464 -23.8413,-97.3101 -2.293,-17.7915 -3.3379,-35.5878 -4.0464,-53.5018 -2.2764,-57.5605 5.5957,-113.6612 23.4013,-168.30601 17.1402,-52.60084 43.1822,-100.60663 77.0015,-144.38678 23.0503,-29.83899 48.7935,-57.02753 78.2588,-80.69129 49.0205,-39.36865 104.2519,-65.86072 165.31,-80.2937 25.2164,-5.96063 50.7574,-10.21387 76.7212,-10.98022 22.6099,-0.66736 45.2847,-1.9889 67.8394,-0.98041 33.519,1.49878 66.7041,6.4151 99.9839,15.48401 m -135.0034,123.44275 c -9.5909,0.66461 -19.1963,1.16503 -28.7701,2.02178 -44.3808,3.97217 -85.6894,17.50519 -123.9204,40.34339 -23.8388,14.2406 -45.7011,31.08368 -64.2695,51.79394 -22.1401,24.69336 -39.4131,52.63135 -52.5522,83.04419 -6.9283,16.03723 -13.1236,32.39145 -19.8829,49.18185 199.7222,0 397.9224,0 596.5694,0 -0.3936,-2.0855 -0.5523,-3.7262 -1.0171,-5.2753 -6.6885,-22.30907 -15.2671,-43.83886 -25.7583,-64.66479 -18.9263,-37.57049 -45.521,-68.55847 -79.6123,-92.98443 -59.3745,-42.54083 -125.6763,-63.77246 -200.7866,-63.46063 z"
             id="path3-7" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 3205.2725,1236.5867 c 9.1611,20.5934 17.9419,40.5257 26.7226,60.4582 0.8118,0.03 1.6238,0.059 2.4358,0.089 17.9568,-39.4495 34.3455,-79.6001 51.6077,-119.3576 17.2082,-39.6335 34.0964,-79.4061 51.1299,-119.1157 17.1272,-39.9274 34.2548,-79.85463 51.3928,-119.77735 17.0007,-39.60322 34.0461,-79.1872 51.0134,-118.80463 17.0791,-39.87824 34.0864,-79.78723 51.2522,-119.97949 9.4907,0.55719 16.7878,5.20483 23.9387,9.74737 18.9278,12.02374 31.3203,29.42224 39.7022,49.89179 7.8845,19.25567 11.303,39.3421 11.9724,60.13159 1.333,41.39715 -8.9087,80.19195 -25.2017,117.74036 -38.8506,89.53346 -77.7727,179.03606 -116.5937,268.58236 -41.5906,95.9352 -83.0713,191.9182 -124.6619,287.8535 -11.7483,27.0996 -23.6965,54.1125 -35.5891,81.1494 -5.7859,13.1541 -15.6301,20.0421 -30.2903,20.1581 -15.0017,0.1185 -25.4328,-6.6936 -31.5222,-20.0646 -9.4956,-20.8505 -18.6917,-41.8375 -27.9729,-62.7851 -31.2002,-70.4192 -62.3972,-140.8398 -93.5657,-211.2731 -37.0769,-83.7857 -74.1179,-167.5872 -111.1877,-251.3758 -5.5071,-12.4478 -11.041,-24.8845 -16.6863,-37.2699 -0.8987,-1.9714 -2.4546,-3.6433 -4.3403,-6.3699 -1.9063,3.0674 -3.5276,5.1135 -4.5618,7.4226 -31.0798,69.3878 -62.0618,138.8194 -93.1433,208.2065 -32.0317,71.5096 -64.1614,142.9755 -96.2293,214.4689 -20.3823,45.4407 -40.7329,90.8952 -61.0927,136.3458 -8.4861,18.9438 -24.9414,27.0236 -42.68,20.9386 -9.8217,-3.3693 -15.8676,-10.3972 -19.789,-19.785 -7.6778,-18.3814 -15.5852,-36.6667 -23.4038,-54.989 -28.0015,-65.6186 -56.0347,-131.2234 -84.0008,-196.8567 -34.102,-80.032 -68.1067,-160.1056 -102.2334,-240.1272 -22.1364,-51.9058 -44.4177,-103.75009 -66.6316,-155.62296 -10.5275,-24.58343 -17.0109,-50.08868 -19.5974,-76.80896 -2.7263,-28.16583 -0.8093,-55.64996 8.6524,-82.32312 9.5395,-26.89227 25.5598,-48.69696 51.5678,-62.04663 1.7747,-0.91077 3.5142,-1.92987 5.3711,-2.63025 2.1243,-0.80121 4.3616,-1.30237 7.7889,-2.2915 15.3125,32.63708 28.2717,66.32074 42.6796,99.35199 14.3309,32.85394 27.8389,66.06665 41.7203,99.1167 14.0073,33.34973 28.0031,66.70446 42.0551,100.0354 13.9256,33.03153 27.9314,66.02913 41.8716,99.05433 14.073,33.339 28.1018,66.6968 42.1646,100.0403 13.8694,32.8854 27.7561,65.7635 42.6025,100.9359 2.4893,-4.1678 3.9233,-6.0905 4.8726,-8.2285 22.2241,-50.061 44.4297,-100.1302 66.5703,-150.2282 37.4397,-84.7173 74.8171,-169.46196 112.2505,-254.18211 24.5525,-55.56793 49.1755,-111.10461 73.7214,-166.67529 5.3247,-12.055 14.1892,-18.70166 27.5815,-19.29322 14.1639,-0.62573 24.6036,5.0929 30.462,17.97437 9.8942,21.75561 19.4101,43.68384 29.028,65.56457 33.2674,75.68329 66.5386,151.36506 99.7537,227.07128 32.9387,75.0755 65.8115,150.1799 99.0933,225.9326 z"
             id="path4-5" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 4999.6797,984.54858 c -28.3618,-73.19909 -78.4175,-124.29498 -152.2666,-148.3764 -87.9829,-28.69025 -168.5996,-11.74927 -239.0015,48.77875 -44.5771,38.32513 -70.102,87.80084 -79.8076,145.42467 -2.2466,13.3379 -2.7998,27.0914 -2.814,40.655 -0.1801,170.9666 -0.1176,341.9336 -0.1176,512.9004 0,3.6219 -5e-4,7.2437 -5e-4,11.5054 -49.6831,0 -98.8404,0 -148.7691,0 -0.1738,-2.1963 -0.5498,-4.7322 -0.5503,-7.2681 -0.028,-177.9654 -0.4213,-355.9326 0.2745,-533.8952 0.1596,-40.938 8.6411,-80.96902 22.583,-119.66983 17.2075,-47.76538 42.3813,-90.88287 76.1777,-128.69818 51.313,-57.41534 114.0762,-96.9552 188.3237,-117.80206 34.3628,-9.6482 69.4121,-13.99079 105.2036,-14.19745 64.7735,-0.3739 125.6949,14.43939 183.0523,44.08685 30.8281,15.935 58.8345,35.96704 84.5078,59.44458 30.9668,28.31836 56.5664,60.78369 77.0181,97.26465 24.9492,44.50513 40.7583,92.11102 46.8896,142.87754 2.4712,20.4591 3.3565,40.9494 3.3443,61.5463 -0.099,168.3006 -0.055,336.6014 -0.055,504.9021 0,3.6119 -5e-4,7.2239 -5e-4,11.4453 -49.7476,0 -98.9038,0 -149.3438,0 0,-3.3383 -5e-4,-6.8694 -5e-4,-10.4005 0,-171.6334 0.011,-343.2667 -0.01,-514.9002 0,-29.0953 -4.7119,-57.4182 -14.6377,-85.62362 z"
             id="path5-3" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 410,1596.0935 c -23.58209,0 -46.16418,0 -69.66989,0 0,-3.7411 0,-6.646 0,-9.5508 0,-178.3091 -0.24301,-356.6186 0.22323,-534.9265 0.0843,-32.2227 6.15555,-63.94536 15.28159,-94.93328 15.98819,-54.28839 42.36514,-102.8963 79.24655,-145.90912 32.65885,-38.08825 71.17569,-68.71777 115.43341,-92.13867 37.87464,-20.04315 78.07898,-33.51422 120.39832,-40.08624 38.2569,-5.9411 76.66821,-6.32306 115.16357,-1.35974 42.5824,5.49042 83.07288,17.7348 121.51819,36.64252 35.42584,17.42266 67.41614,39.82568 96.18113,66.97759 47.5655,44.89814 81.9799,98.19514 102.893,160.08039 11.509,34.05719 18.8836,69.01805 19.6831,105.15055 0.3823,17.2772 1.2495,34.5518 1.2599,51.828 0.098,161.9779 0.058,323.9559 0.058,485.9338 0,3.6305 0,7.261 0,11.5853 -49.8878,0 -99.3348,0 -150.00984,0 0,-3.5639 -1.3e-4,-7.4214 -1.3e-4,-11.2788 0,-173.3098 0.12342,-346.6196 -0.0765,-519.9292 -0.0585,-50.6551 -15.40748,-96.78098 -44.80896,-137.89658 -38.92029,-54.42689 -91.71894,-88.37305 -157.53455,-99.46753 -74.61066,-12.57703 -141.83289,6.1286 -199.83698,55.10492 -42.29589,35.71289 -68.95178,81.32232 -80.51016,135.32359 -3.37637,15.7746 -4.97451,32.2276 -5.00702,48.3745 -0.34726,172.6424 -0.21585,345.2859 -0.21585,517.929 0,3.6475 -6e-5,7.2948 -6e-5,10.6139 -0.501,0.5794 -0.69952,0.8527 -0.94281,1.0774 -0.23013,0.2125 -0.50659,0.5341 -0.76407,0.5353 -25.65426,0.1234 -51.30865,0.2208 -77.96304,0.3197 z"
             id="path6-5" />
          <path
             fill="#fdfdfd"
             opacity="1"
             stroke="none"
             d="m 3714.3262,933.99982 c 0,-189.8609 0,-378.72174 0,-568.14905 48.6479,0 96.458,0 144.8086,0 0,409.22815 0,818.23763 0,1227.74643 -48.086,0 -95.9036,0 -144.8086,0 0,-219.6512 0,-439.1242 0,-659.59738 z"
             id="path7" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 4039.6611,1283.9998 c 0,-194.8984 0,-388.79674 0,-583.18358 17.9363,-2.32794 34.2874,0.40393 50.0562,7.41297 27.5542,12.24737 47.1694,33.11236 61.9829,58.59686 20.6118,35.45929 30.501,74.06897 30.5952,115.02801 0.5322,231.22454 0.9263,462.44954 1.3994,693.67434 0.014,6.9949 -0.3447,13.8426 -3.9194,20.3482 -25.8696,1.7329 -48.4805,-6.4384 -68.8164,-21.7319 -27.801,-20.9076 -45.2735,-49.1548 -57.0007,-81.2996 -10.1045,-27.697 -14.6556,-56.3265 -14.3892,-85.8698 0.3662,-40.6555 0.092,-81.3166 0.092,-122.9755 z"
             id="path8" />
          <path
             fill="#fefefe"
             opacity="1"
             stroke="none"
             d="m 4020.2021,392.20001 c 18.597,-26.66824 43.063,-43.24554 74.7132,-47.67129 68.4602,-9.57306 117.9685,42.76141 123.9172,92.79373 6.3931,53.76965 -27.0635,101.73797 -71.707,116.86413 -67.7073,22.94037 -130.2737,-19.84082 -142.3987,-81.35055 -5.5872,-28.34519 -0.7876,-55.39792 15.4753,-80.63602 z"
             id="path9" />
        </g>
      </g>
      <path
         d="m 41.432317,15.79437 h -0.04834 q -0.108769,0.187323 -0.338391,0.320263 -0.229624,0.13294 -0.568015,0.13294 -0.284008,0 -0.543844,-0.114812 -0.253794,-0.120854 -0.453203,-0.326306 -0.193367,-0.211496 -0.308178,-0.501545 -0.114812,-0.29005 -0.114812,-0.634485 0,-0.344434 0.114812,-0.634484 0.114811,-0.290051 0.308178,-0.495502 0.199409,-0.211495 0.453203,-0.326307 0.259836,-0.120854 0.543844,-0.120854 0.338391,0 0.568015,0.13294 0.229622,0.132939 0.338391,0.320263 h 0.04834 l -0.04834,-0.42299 v -1.299182 h 0.791595 v 4.32658 H 41.43232 Z m -0.791595,-0.277965 q 0.15711,0 0.296093,-0.05438 0.145025,-0.06043 0.253794,-0.169196 0.108769,-0.108768 0.175238,-0.265879 0.06647,-0.15711 0.06647,-0.35652 0,-0.199409 -0.06647,-0.35652 -0.06647,-0.15711 -0.175238,-0.265879 -0.108769,-0.108768 -0.253794,-0.163153 -0.138983,-0.06043 -0.296093,-0.06043 -0.15711,0 -0.302136,0.06043 -0.138982,0.06043 -0.24775,0.169196 -0.108769,0.108769 -0.175239,0.265879 -0.06647,0.15711 -0.06647,0.350477 0,0.193367 0.06647,0.350478 0.06647,0.15711 0.175239,0.265878 0.108768,0.108769 0.24775,0.169196 0.145026,0.06043 0.302136,0.06043 z m 3.583311,-2.423127 q 0.344434,0 0.628442,0.120854 0.29005,0.114812 0.495502,0.326307 0.211495,0.205451 0.326306,0.495502 0.120854,0.29005 0.120854,0.634484 0,0.344435 -0.120854,0.634485 -0.114811,0.290049 -0.326306,0.501545 -0.205452,0.205452 -0.495502,0.326306 -0.284008,0.114812 -0.628442,0.114812 -0.344434,0 -0.634484,-0.114812 -0.284007,-0.120854 -0.495503,-0.326306 -0.205452,-0.211496 -0.326306,-0.501545 -0.114811,-0.29005 -0.114811,-0.634485 0,-0.344434 0.114811,-0.634484 0.120854,-0.290051 0.326306,-0.495502 0.211496,-0.211495 0.495503,-0.326307 0.29005,-0.120854 0.634484,-0.120854 z m 0,2.423127 q 0.151068,0 0.29005,-0.05438 0.145025,-0.06043 0.253794,-0.169196 0.108768,-0.108768 0.169196,-0.265879 0.06647,-0.15711 0.06647,-0.35652 0,-0.199409 -0.06647,-0.35652 -0.06043,-0.15711 -0.169196,-0.265879 -0.108769,-0.108768 -0.253794,-0.163153 -0.138982,-0.06043 -0.29005,-0.06043 -0.15711,0 -0.296092,0.06043 -0.138983,0.05438 -0.247752,0.163153 -0.108768,0.108769 -0.175238,0.265879 -0.06043,0.157111 -0.06043,0.35652 0,0.19941 0.06043,0.35652 0.06647,0.157111 0.175238,0.265879 0.108769,0.108769 0.247752,0.169196 0.138982,0.05438 0.296092,0.05438 z m 2.761506,-1.93971 h 0.04834 q 0.138982,-0.22358 0.374647,-0.350477 0.235666,-0.13294 0.537802,-0.13294 0.277964,0 0.489459,0.09064 0.211494,0.09064 0.344434,0.259836 0.138983,0.163153 0.205453,0.398819 0.07251,0.229623 0.07251,0.51363 v 1.794685 H 48.26659 v -1.698001 q 0,-0.320264 -0.145025,-0.471332 -0.138983,-0.15711 -0.410905,-0.15711 -0.163153,0 -0.29005,0.07251 -0.120854,0.06647 -0.211495,0.187325 -0.0846,0.114811 -0.132939,0.277964 -0.0423,0.15711 -0.0423,0.338392 v 1.45025 h -0.791595 v -2.960927 h 0.743252 z m 4.060692,3.976102 q -0.314221,0 -0.561973,-0.0846 -0.241708,-0.07856 -0.42299,-0.211495 -0.181281,-0.126897 -0.302135,-0.284008 -0.120854,-0.15711 -0.175239,-0.314221 l 0.755339,-0.302135 q 0.0846,0.235666 0.277965,0.362563 0.193367,0.132939 0.429033,0.132939 0.374647,0 0.592185,-0.235665 0.217537,-0.229623 0.217537,-0.64657 v -0.205452 h -0.04834 q -0.138982,0.193367 -0.368606,0.308178 -0.22358,0.108768 -0.531758,0.108768 -0.265879,0 -0.519673,-0.108768 -0.247751,-0.108769 -0.441117,-0.308178 -0.193367,-0.205453 -0.314221,-0.48946 -0.120855,-0.284007 -0.120855,-0.634484 0,-0.350477 0.120855,-0.634485 0.120854,-0.29005 0.314221,-0.489459 0.193366,-0.205452 0.441117,-0.314221 0.253794,-0.108769 0.519673,-0.108769 0.308178,0 0.531758,0.114812 0.229624,0.108769 0.368606,0.302135 h 0.04834 v -0.320263 h 0.755339 v 2.749432 q 0,0.374648 -0.114812,0.670741 -0.114811,0.302135 -0.320263,0.507587 -0.205452,0.211496 -0.495502,0.320264 -0.284007,0.114811 -0.634484,0.114811 z m 0.03021,-2.084734 q 0.145025,0 0.284007,-0.05438 0.145025,-0.05438 0.253794,-0.15711 0.108769,-0.108769 0.175238,-0.259836 0.06647,-0.157111 0.06647,-0.35652 0,-0.199409 -0.06647,-0.35652 -0.06647,-0.15711 -0.175238,-0.259837 -0.108769,-0.108768 -0.253794,-0.163153 -0.138982,-0.05438 -0.284007,-0.05438 -0.145025,0 -0.284007,0.05438 -0.138983,0.05438 -0.247752,0.163153 -0.108768,0.108769 -0.175238,0.26588 -0.06647,0.151067 -0.06647,0.350477 0,0.199409 0.06647,0.35652 0.06647,0.151067 0.175238,0.259836 0.108769,0.102726 0.247752,0.15711 0.138982,0.05438 0.284007,0.05438 z m 2.21162,0.682826 v -4.32658 h 0.791595 v 4.32658 z m 4.241965,-0.71304 q -0.205452,0.362563 -0.55593,0.586143 -0.344434,0.223581 -0.845979,0.223581 -0.338391,0 -0.628441,-0.114812 -0.284008,-0.120854 -0.495502,-0.332349 -0.211496,-0.211495 -0.33235,-0.495502 -0.114811,-0.29005 -0.114811,-0.634485 0,-0.320264 0.114811,-0.604271 0.114812,-0.29005 0.320264,-0.501545 0.205452,-0.217537 0.483417,-0.344434 0.284007,-0.126897 0.622399,-0.126897 0.35652,0 0.634484,0.120854 0.277965,0.114812 0.465289,0.326307 0.187324,0.205451 0.284007,0.489459 0.09668,0.284007 0.09668,0.616356 0,0.0423 0,0.07251 -0.0061,0.03626 -0.0061,0.06647 -0.0061,0.03021 -0.0061,0.06647 H 55.33641 q 0.02417,0.181281 0.09668,0.314221 0.07856,0.126896 0.187324,0.217537 0.114811,0.0846 0.247751,0.126897 0.132939,0.03626 0.271922,0.03626 0.271922,0 0.44716,-0.120854 0.181281,-0.126897 0.284008,-0.314221 z m -0.719082,-1.148114 q -0.0061,-0.07856 -0.05438,-0.175239 -0.0423,-0.09668 -0.13294,-0.181281 -0.0846,-0.0846 -0.217537,-0.138982 -0.126897,-0.05438 -0.308178,-0.05438 -0.253794,0 -0.447161,0.145025 -0.193366,0.145025 -0.271922,0.404862 z"
         id="text1"
         style="-inkscape-font-specification:'Product Sans Bold';fill:#ffffff;stroke-width:0.214112;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:fill markers stroke"
         aria-label="dongle" />
    </g>
    <g
       id="g9"
       transform="matrix(0.57657888,0,0,0.57657888,23.652755,-4.5902098)">
      <g
         id="g8"
         transform="translate(0.28227163,12.535255)">
        <g
           id="g7">
          <path
             d="m 35.837392,4.9049227 h 5.018817 V 6.1989011 H 37.71428 v 0.963249 h 2.914552 V 8.3982509 H 37.71428 v 1.1947596 h 3.232879 v 1.3725265 h -5.109767 z"
             id="text2"
             style="font-size:8.46667px;line-height:0;font-family:'Arial Black';-inkscape-font-specification:'Arial Black, ';text-align:center;text-anchor:middle;fill:#ffffff;stroke-width:0.3;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:5.3;paint-order:fill markers stroke"
             aria-label="E" />
          <path
             d="m 40.203458,4.4081442 c -0.02665,-0.034919 -0.183559,-0.4984377 -0.183299,-0.5413169 1.56e-4,-0.028427 0.0055,-0.042831 0.04159,-0.1109818 0.03381,-0.064804 0.04594,-0.081716 0.06772,-0.097662 0.03063,-0.022418 0.212951,-0.082129 0.335827,-0.109943 0.270182,-0.061157 0.584578,-0.059121 0.853816,0.00554 0.148569,0.035675 0.231933,0.066735 0.393837,0.1467287 0.1619,0.079992 0.237213,0.1273399 0.35582,0.2236643 0.214912,0.1745502 0.407425,0.4228597 0.523172,0.6748119 0.05938,0.1292665 0.118416,0.3025171 0.115541,0.3391295 -0.003,0.040713 -0.0615,0.1738713 -0.08821,0.2013508 -0.02568,0.026489 -0.503823,0.1905923 -0.552515,0.1896397 -0.04409,-8.458e-4 -0.106304,-0.031088 -0.134246,-0.065137 -0.01179,-0.014517 -0.02764,-0.05209 -0.03841,-0.091591 -0.02501,-0.091714 -0.07776,-0.2079413 -0.134316,-0.2961518 -0.251713,-0.3926386 -0.723361,-0.581219 -1.178958,-0.4713914 -0.04546,0.010937 -0.111555,0.031685 -0.146941,0.046079 -0.03792,0.015451 -0.07735,0.025732 -0.09608,0.025143 -0.04383,-0.00145 -0.108691,-0.034175 -0.134299,-0.067845 z M 39.729552,3.0197947 c -0.02517,-0.03359 -0.190244,-0.5290899 -0.186086,-0.5585231 0.0023,-0.013471 0.02076,-0.057072 0.04354,-0.09941 0.03224,-0.061638 0.04462,-0.079088 0.06595,-0.094633 0.0504,-0.03696 0.39424,-0.1391613 0.606198,-0.1802093 0.338116,-0.065475 0.756068,-0.074455 1.101028,-0.023655 0.776116,0.1142971 1.494538,0.4979972 2.013603,1.0754463 0.192635,0.2143018 0.382716,0.4917813 0.504389,0.7363062 0.09617,0.1932895 0.223892,0.5284821 0.225166,0.5909728 7.17e-4,0.026305 -0.0061,0.046714 -0.03505,0.1098797 -0.01988,0.043905 -0.043,0.085204 -0.05255,0.09502 -0.02254,0.022915 -0.525299,0.1940088 -0.563019,0.1916295 -0.03518,-0.00221 -0.09667,-0.033127 -0.121901,-0.061124 C 43.31732,4.7864378 43.30073,4.7456878 43.28022,4.677292 43.17245,4.3175771 42.943853,3.9423421 42.65809,3.6560647 42.45027,3.4478703 42.247626,3.3031448 41.976121,3.1689976 41.704613,3.0348507 41.466543,2.9618316 41.174917,2.9232539 c -0.401005,-0.053041 -0.837926,-0.00662 -1.189115,0.1263183 -0.0668,0.025254 -0.109232,0.036851 -0.129399,0.035266 -0.04052,-0.00316 -0.105055,-0.036259 -0.126388,-0.06483 z"
             id="path26127-8"
             style="fill:#ffffff;stroke:none;stroke-width:0.070718;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
             inkscape:connector-curvature="0"
             sodipodi:nodetypes="ccccccsccccsccccccccccccccssccccccssccccc" />
          <g
             id="g12"
             transform="matrix(1.2461505,0,0,1.2461505,-15.230452,-7.4713582)">
            <g
               id="g2-6"
               style="display:inline;fill:#b3b3b3"
               transform="matrix(-0.33612077,-0.00483966,0.00483966,-0.33612077,79.801826,40.4172)">
              <g
                 id="g8406"
                 transform="translate(-34.239567,-38.316123)"
                 style="fill:#b3b3b3">
                <g
                   id="g8208"
                   transform="translate(-159.88717,-95.82622)"
                   style="fill:#b3b3b3;stroke:#525252;stroke-opacity:1">
                  <rect
                     style="fill:#ffffff;fill-opacity:1;stroke:#525252;stroke-width:0.205744;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
                     id="rect2264"
                     width="5.0334105"
                     height="6.2991552"
                     x="156.5406"
                     y="-308.61356"
                     transform="rotate(90)" />
                  <rect
                     style="fill:#b3b3b3;fill-rule:evenodd;stroke:#525252;stroke-width:0.264583;stroke-opacity:1"
                     id="rect1049"
                     width="3.6712434"
                     height="18.258059"
                     x="157.22171"
                     y="-285.07336"
                     transform="rotate(90)" />
                  <rect
                     style="fill:#b3b3b3;fill-rule:evenodd;stroke:#525252;stroke-width:0.264583;stroke-opacity:1"
                     id="rect1073"
                     width="6.6150098"
                     height="8.9465494"
                     x="155.74982"
                     y="-302.93637"
                     transform="rotate(90)" />
                  <path
                     style="fill:#b3b3b3;fill-opacity:1;stroke:#525252;stroke-width:0.165;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
                     d="m 293.98982,155.74982 -8.91644,1.47188 v 3.67125 l 8.91644,1.47188 z"
                     id="path1268" />
                </g>
                <g
                   id="g8396-5"
                   style="display:inline;fill:#b3b3b3;stroke:#3d9acf;stroke-opacity:1"
                   transform="translate(21.203604,230.51311)">
                  <g
                     id="g6"
                     transform="translate(-21.228682,-229.89941)">
                    <path
                       style="fill:#b3b3b3;fill-opacity:1;stroke:#838789;stroke-width:0.264583px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
                       d="m 107.61167,54.88761 v 16.68084 l -3.29993,3.29994 h -16.71 L 84.15929,71.42595 V 55.08017 l 3.48636,-3.48636 h 16.86859 z"
                       id="path912-6" />
                    <circle
                       style="fill:#b3b3b3;fill-opacity:1;stroke:#3d9acf;stroke-width:1.41883;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter5128-7)"
                       id="path2413-2"
                       cx="350.3833"
                       cy="127.93855"
                       r="7.5987883"
                       transform="matrix(0,0.94161879,-0.94161879,0,216.35483,-266.6964)" />
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </g>
    </g>
  </g>
  <script
     id="script1169"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script>
</svg>
